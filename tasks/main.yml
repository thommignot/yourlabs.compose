---

- name: Ensure docker was setup once on this host
  include_role: name=yourlabs.docker
  when: ansible_facts['ansible_local']['yourlabs_docker']['state']|default('') != 'success'

- name: Make home directory
  when: home is defined
  file:
    path: '{{ home }}'
    state: directory

- name: Download compose file if URL
  when: compose.startswith('https://') or compose.startswith('http://')
  delegate_to: localhost
  get_url:
    url: '{{ compose }}'
    dest: 'docker-compose.yml'

- name: Set compose fact if compose is URL
  when: compose.startswith('https://') or compose.startswith('http://')
  set_fact:
    compose: 'docker-compose.yml'

- name: Get the docker networks list
  shell: docker network ls --format '{{ "{{ .Name }}" }}'
  changed_when: false
  register: docker_network_ls

- name: Generate docker-compose config from compose files
  shell: docker-compose {% for f in compose.split(",") %}-f {{ lookup('env', 'PWD') + '/' + f }} {% endfor %} config
  delegate_to: localhost
  register: compose_content
  environment: '{{ true|allenv }}'

- set_fact: { compose_content: '{{ compose_content.stdout }}' }

- name: Generate compose content
  set_fact:
    compose_content: '{{ compose_content|docker_compose_rewrite(hostvars[inventory_hostname], docker_network_ls.stdout_lines) }}'

- name: Print final compose after rewrite based on Ansible variables
  debug: var=compose_content

- name: Get external networks and directories from compose contents
  set_fact:
    external_config: '{{ compose_content|docker_compose_external_config }}'
    external_networks: '{{ compose_content|docker_compose_external_networks }}'

- name: Create directories from io.yourlabs.compose.mkdir
  loop: '{{ external_config.get("mkdir", []) }}'
  when: home is defined
  file:
    state: directory
    path: '{{ home }}/{{ item.path }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'

- name: Create docker networks
  docker_network:
    name: '{{ item }}'
  loop: '{{ external_networks }}'

- name: Upload compose file
  when: home is defined
  copy:
    content: '{{ compose_content }}'
    dest: '{{ home }}/docker-compose.yml'

- name: Login to docker registry
  when: docker_auth_username|default(false)
  docker_login:
    username: '{{ docker_auth_username }}'
    password: '{{ docker_auth_password }}'
    registry: '{{ docker_auth_registry|default("hub.docker.io") }}'
    config_path: '{{ home if home is defined else ansible_user_dir + "/" + project }}/.docker/config.json'

- name: Restart docker-compose services in home
  when: home is defined
  environment:
    DOCKER_CONFIG: '{{ home }}/.docker'
  docker_compose:
    project_src: '{{ home }}'
    restarted: true
    build: '{{ build|default("no") }}'
    state: '{{ state|default("present") }}'

- name: Restart project docker-compose services
  when: project is defined
  environment:
    DOCKER_CONFIG: '{{ ansible_user_dir + "/" + project }}/.docker'
  docker_compose:
    definition: '{{ compose_content|yaml_load if project is defined else None }}'
    project_name: '{{ project }}'
    restarted: true
    build: '{{ build|default("no") }}'
    state: '{{ state|default("present") }}'

- name: Show logs
  shell: docker-compose {% if project is defined %}-f - -p {{ project }}{% endif %} logs
  args:
    chdir: '{{ home|default("/tmp") }}'
    stdin: '{{ compose_content if project is defined else None }}'
